plugins {
    id "java"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.1.0"
    id "org.hibernate.orm" version "${hibernateVersion}"
    id "org.graalvm.buildtools.native" version"${graalvmBuildtoolsVersion}"
}

group = "com.sam2n"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "17"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("testcontainersVersion", "${testContainersVersion}")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    // fake data generator
    implementation "com.github.javafaker:javafaker:1.0.2"
    // entity -> table name conversion
    implementation "io.hypersistence:hypersistence-utils-hibernate-60:3.2.0"
    // openapi
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-common:${openapiVersion}"
    implementation "org.apache.commons:commons-collections4:4.4"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"

    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "com.amazonaws:aws-java-sdk-cognitoidp:${awsSdkVersion}"

    compileOnly "org.projectlombok:lombok"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    runtimeOnly "com.mysql:mysql-connector-j"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql"

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named("test") {
    useJUnitPlatform()
}

hibernate {
    enhancement {
        lazyInitialization true
        dirtyTracking true
        associationManagement true
    }
}

